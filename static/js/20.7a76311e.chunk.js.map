{"version":3,"sources":["../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getDialogTitleUtilityClass","slot","generateUtilityClass","dialogTitleClasses","generateUtilityClasses","getDialogActionsUtilityClass","_excluded","DialogActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_ref","_extends","display","alignItems","padding","justifyContent","flex","marginLeft","DialogActions","React","inProps","ref","useThemeProps","className","_props$disableSpacing","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getDialogContentUtilityClass","DialogContentRoot","dividers","theme","WebkitOverflowScrolling","overflowY","borderTop","concat","vars","palette","divider","borderBottom","_defineProperty","paddingTop","DialogContent","_props$dividers","DialogTitleRoot","Typography","DialogTitle","idProp","id","_React$useContext$tit","DialogContext","titleId","component","variant","options","ConfirmationDialogRaw","onClose","valueProp","open","_objectWithoutProperties","_useState","useState","_useState2","_slicedToArray","setValue","radioGroupRef","useRef","useEffect","_jsxs","Dialog","_objectSpread","maxWidth","disableEscapeKeyDown","TransitionProps","onExiting","current","focus","children","RadioGroup","onChange","_","newValue","map","option","FormControlLabel","control","Radio","label","Button","color","onClick","DialogRoot","width","backgroundColor","background","paper","maxHeight","ConfirmationDialog","_React$useState","_React$useState2","setOpen","_React$useState3","_React$useState4","List","role","ListItem","button","disabled","ListItemText","primary","secondary","keepMounted","MuiDialogTitle","margin","position","right","top","grey","disableTypography","IconButton","CloseIcon","MuiDialogContent","_ref2","MuiDialogActions","_ref3","CustomizedDialogs","handleClose","gutterBottom","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","DialogContentText","composedClasses","Transition","forwardRef","Slide","direction","AlertDialogSlide","TransitionComponent","FormDialog","Box","TextField","autoFocus","type","fullWidth","FullScreenDialog","useTheme","fullScreen","AppBar","sx","Toolbar","edge","H6","Divider","flexDirection","marginTop","minWidth","MaxWidthDialog","setFullWidth","_React$useState5","_React$useState6","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","event","target","inputProps","MenuItem","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","AlertDialog","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItemsFlexStart","flexShrink","ListItemAvatar","context","ListContext","emails","SimpleDialog","selectedValue","handleListItemClick","email","Avatar","blue","PersonIcon","AddIcon","SimpleDialogDemo","_useState3","_useState4","setSelectedValue","Container","marginBottom","AppDialog","Breadcrumb","routeSegments","path","Stack","SimpleCard","title"],"mappings":"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","file":"static/js/20.7a76311e.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport { styled } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = useState(valueProp);\n  const radioGroupRef = useRef(null);\n\n  useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current !== null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  const handleCancel = () => onClose();\n  const handleOk = () => onClose(value);\n\n  const handleChange = (_, newValue) => setValue(newValue);\n\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      disableEscapeKeyDown\n      TransitionProps={{ onExiting: handleEntering }}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"Ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  width: '100%',\n  maxWidth: 360,\n  backgroundColor: theme.palette.background.paper,\n  '& .paper': { width: '80%', maxHeight: 435 },\n}));\n\nexport default function ConfirmationDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return (\n    <DialogRoot>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Interruptions\" />\n        </ListItem>\n\n        <ListItem\n          button\n          divider\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"Phone ringtone\"\n          onClick={handleClickListItem}\n          role=\"listitem\"\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItem>\n\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n        </ListItem>\n\n        <ConfirmationDialogRaw\n          keepMounted\n          open={open}\n          value={value}\n          className=\"paper\"\n          id=\"ringtone-menu\"\n          onClose={handleClose}\n        />\n      </List>\n    </DialogRoot>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport MuiDialogActions from '@mui/material/DialogActions';\nimport MuiDialogContent from '@mui/material/DialogContent';\nimport MuiDialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n  margin: 0,\n  padding: theme.spacing(2),\n  '& .closeButton': {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst DialogTitle = (props) => {\n  const { children, onClose } = props;\n  return (\n    <DialogTitleRoot disableTypography>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitleRoot>\n  );\n};\n\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\n  '&.root': { padding: theme.spacing(2) },\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\n  '&.root': { margin: 0, padding: theme.spacing(1) },\n}));\n\nconst CustomizedDialogs = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomizedDialogs;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport React from 'react';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        keepMounted\n        onClose={handleClose}\n        TransitionComponent={Transition}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport { Box } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Slide from '@mui/material/Slide';\nimport Toolbar from '@mui/material/Toolbar';\nimport { useTheme } from '@mui/system';\nimport { H6 } from 'app/components/Typography';\nimport React from 'react';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open full-screen dialog\n      </Button>\n\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar sx={{ position: 'relative' }}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n              <CloseIcon />\n            </IconButton>\n            <H6 sx={{ flex: 1, marginLeft: theme.spacing(2) }}>Sound</H6>\n            <Button color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItem>\n        </List>\n      </Dialog>\n    </Box>\n  );\n}\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport { styled } from '@mui/system';\nimport React from 'react';\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  '& form': {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'column',\n    width: 'fit-content',\n  },\n  '& .formControl': {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  '& .formControlLabel': {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function MaxWidthDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return (\n    <DialogRoot>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open max-width dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n\n          <form noValidate>\n            <FormControl className=\"formControl\">\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                inputProps={{ name: 'max-width', id: 'max-width' }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControlLabel\n              className=\"formControlLabel\"\n              label=\"Full width\"\n              control={\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\n              }\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </DialogRoot>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/system';\nimport React from 'react';\n\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open responsive dialog\n      </Button>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState } from 'react';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import AddIcon from '@mui/icons-material/Add';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Box } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport { blue } from '@mui/material/colors';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, ...other } = props;\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar sx={{ backgroundColor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('user02@gmail.com');\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </Box>\n  );\n}\n","import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport CustomizedDialogs from './CustomizedDialog';\nimport AlertDialogSlide from './DialogTransition';\nimport FormDialog from './FormDialog';\nimport FullScreenDialog from './FullScreenDialog';\nimport MaxWidthDialog from './OptimalSizeDialog';\nimport ResponsiveDialog from './ResponsiveDialog';\nimport AlertDialog from './SimpleAlerts';\nimport SimpleDialogDemo from './SimpleDialog';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst AppDialog = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Dialog' }]} />\n      </Box>\n\n      <Stack spacing={3}>\n        <SimpleCard title=\"simple Dialog\">\n          <SimpleDialogDemo />\n        </SimpleCard>\n\n        <SimpleCard title=\"alert dialog\">\n          <AlertDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"transition\">\n          <AlertDialogSlide />\n        </SimpleCard>\n\n        <SimpleCard title=\"form dialog\">\n          <FormDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"customized dialog\">\n          <CustomizedDialogs />\n        </SimpleCard>\n\n        <SimpleCard title=\"full-screen dialog\">\n          <FullScreenDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"optimized size dialog\">\n          <MaxWidthDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"responsive dialog\">\n          <ResponsiveDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"confirmation dialog\">\n          <ConfirmationDialog />\n        </SimpleCard>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default AppDialog;\n"],"sourceRoot":""}