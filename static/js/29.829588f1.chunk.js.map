{"version":3,"sources":["app/views/material-kit/checkbox/FormGroupCheckbox.jsx","app/views/material-kit/checkbox/LabelledCheckbox.jsx","app/views/material-kit/checkbox/PlacingCheckboxLabel.jsx","app/views/material-kit/checkbox/SimpleCheckbox.jsx","app/views/material-kit/checkbox/AppCheckbox.jsx"],"names":["AppButtonRoot","styled","_ref","display","margin","theme","spacing","FormGroupCheckbox","_React$useState","React","useState","gilad","jason","antoine","_React$useState2","_slicedToArray","state","setState","handleChange","name","event","_objectSpread","_defineProperty","target","checked","error","filter","v","length","_jsxs","children","FormControl","component","className","_jsx","FormLabel","FormGroup","FormControlLabel","control","Checkbox","onChange","value","label","FormHelperText","required","GreenCheckbox","color","green","LabelledCheckbox","checkedA","checkedB","checkedF","checkedG","row","disabled","indeterminate","icon","FavoriteBorder","checkedIcon","Favorite","CheckBoxOutlineBlankIcon","fontSize","CheckBoxIcon","PlacingCheckboxLabel","setValue","labelPlacement","SimpleCheckbox","Box","inputProps","defaultChecked","Container","_ref2","breakpoints","down","marginBottom","AppCheckbox","Breadcrumb","routeSegments","path","SimpleCard","title","py"],"mappings":"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","file":"static/js/29.829588f1.chunk.js","sourcesContent":["import {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  styled,\n} from '@mui/material';\nimport React from 'react';\n\nconst AppButtonRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  '& .formControl': { margin: theme.spacing(2) },\n}));\n\nexport default function FormGroupCheckbox() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n\n  return (\n    <AppButtonRoot>\n      <FormControl component=\"fieldset\" className=\"formControl\">\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n\n      <FormControl required error={error} component=\"fieldset\" className=\"formControl\">\n        <FormLabel component=\"legend\">Pick two</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n\n        <FormHelperText>You can display an error</FormHelperText>\n      </FormControl>\n    </AppButtonRoot>\n  );\n}\n","import CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport Favorite from '@mui/icons-material/Favorite';\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\nimport { styled } from '@mui/material';\nimport Checkbox from '@mui/material/Checkbox';\nimport { green } from '@mui/material/colors';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport React from 'react';\n\nconst GreenCheckbox = styled(Checkbox)(() => ({\n  color: green[400],\n  '&$checked': {\n    color: green[600],\n  },\n}));\n\nexport default function LabelledCheckbox() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Checkbox checked={state.checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" />\n        }\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Uncontrolled\" />\n      <FormControlLabel disabled control={<Checkbox value=\"checkedD\" />} label=\"Disabled\" />\n      <FormControlLabel disabled control={<Checkbox checked value=\"checkedE\" />} label=\"Disabled\" />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedF}\n            onChange={handleChange('checkedF')}\n            value=\"checkedF\"\n            indeterminate\n          />\n        }\n        label=\"Indeterminate\"\n      />\n      <FormControlLabel\n        control={\n          <GreenCheckbox\n            color=\"default\"\n            checked={state.checkedG}\n            onChange={handleChange('checkedG')}\n            value=\"checkedG\"\n          />\n        }\n        label=\"Custom color\"\n      />\n      <FormControlLabel\n        control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} value=\"checkedH\" />}\n        label=\"Custom icon\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n            value=\"checkedI\"\n          />\n        }\n        label=\"Custom size\"\n      />\n    </FormGroup>\n  );\n}\n","import Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport React from 'react';\n\nfunction PlacingCheckboxLabel() {\n  const [value, setValue] = React.useState('female');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\n      <FormGroup aria-label=\"position\" name=\"position\" value={value} onChange={handleChange} row>\n        <FormControlLabel\n          value=\"top\"\n          label=\"Top\"\n          labelPlacement=\"top\"\n          control={<Checkbox color=\"primary\" />}\n        />\n        <FormControlLabel\n          value=\"start\"\n          label=\"Start\"\n          labelPlacement=\"start\"\n          control={<Checkbox color=\"primary\" />}\n        />\n        <FormControlLabel\n          value=\"bottom\"\n          label=\"Bottom\"\n          labelPlacement=\"bottom\"\n          control={<Checkbox color=\"primary\" />}\n        />\n        <FormControlLabel\n          value=\"end\"\n          label=\"End\"\n          labelPlacement=\"end\"\n          control={<Checkbox color=\"primary\" />}\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nexport default PlacingCheckboxLabel;\n","import { Box, Checkbox } from '@mui/material';\nimport React from 'react';\n\nexport default function SimpleCheckbox() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <Box>\n      <Checkbox\n        value=\"checkedA\"\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Checkbox\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      <Checkbox value=\"checkedC\" inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\n      <Checkbox disabled value=\"checkedD\" inputProps={{ 'aria-label': 'disabled checkbox' }} />\n\n      <Checkbox\n        disabled\n        checked\n        value=\"checkedE\"\n        inputProps={{ 'aria-label': 'disabled checked checkbox' }}\n      />\n\n      <Checkbox\n        checked={state.checkedF}\n        onChange={handleChange('checkedF')}\n        value=\"checkedF\"\n        indeterminate\n        inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n      />\n\n      <Checkbox\n        defaultChecked\n        color=\"default\"\n        value=\"checkedG\"\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\n      />\n    </Box>\n  );\n}\n","import { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport FormGroupCheckbox from './FormGroupCheckbox';\nimport LabelledCheckbox from './LabelledCheckbox';\nimport PlacingCheckboxLabel from './PlacingCheckboxLabel';\nimport SimpleCheckbox from './SimpleCheckbox';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst AppCheckbox = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Chckbox' }]}\n        />\n      </Box>\n\n      <SimpleCard title=\"simple checkbox\">\n        <SimpleCheckbox />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Checkbox with Label\">\n        <LabelledCheckbox />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Checkbox with Form Group\">\n        <FormGroupCheckbox />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Checkbox with Different Label Placement\">\n        <PlacingCheckboxLabel />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AppCheckbox;\n"],"sourceRoot":""}